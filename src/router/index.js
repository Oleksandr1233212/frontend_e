// src/router/index.js

import { createRouter, createWebHistory } from 'vue-router';
import { authGuard, roleGuard } from '@/router/guards';
import { useAuthStore } from '@/stores/authStore'; // –Ü–º–ø–æ—Ä—Ç Pinia Store

// üîπ –Ü–º–ø–æ—Ä—Ç–∏ –ø—É–±–ª—ñ—á–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
import AppMain from '@/layouts/AppMain.vue';
import AppAbout from '@/layouts/AppAbout.vue';
import AppErrorr from '@/layouts/AppErr.vue';
import AppContact from '@/layouts/AppContact.vue';
import AppCourses from '@/layouts/AppCourses.vue';
import AppTeam from '@/layouts/AppTeam.vue';
import AppTestimonial from '@/layouts/AppTestimonial.vue';
import AppLogin from '@/layouts/AppLogin.vue';
import AppRegister from '@/layouts/AppRegister.vue';

// üîπ –Ü–º–ø–æ—Ä—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
import AppAdmin from '@/components/admin/AppAdmin.vue';
import AdminDash from '@/components/admin/AdminDash.vue';
import AddStudent from '@/components/admin/students/AddStudent.vue';
import EditStudent from '@/components/admin/students/EditStudent.vue';
import StudentDetails from '@/components/admin/students/StudentDetails.vue';
import Students from '@/components/admin/students/Students.vue';
import AddTeacher from '@/components/admin/teachers/AddTeacher.vue';
import EditTeacher from '@/components/admin/teachers/EditTeacher.vue';
import TeacherDetails from '@/components/admin/teachers/TeacherDetails.vue';
import Teachers from '@/components/admin/teachers/Teachers.vue';

// üîπ –Ü–º–ø–æ—Ä—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤–∏–∫–ª–∞–¥–∞—á–∞
import TeacherDash from '@/components/teacher/TeacherDash.vue';

// üîπ –Ü–º–ø–æ—Ä—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
import StudentDash from '@/components/student/StudentDash.vue';

// üîπ –Ü–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ—ñ–ª—é
import AppProfile from '@/components/common/Profile.vue';

// üîπ –ü—É–±–ª—ñ—á–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (–¥–æ—Å—Ç—É–ø–Ω—ñ –≤—Å—ñ–º)
const publicRoutes = [
  { path: '/', name: 'Main', component: AppMain },
  { path: '/about', name: 'About', component: AppAbout },
  { path: '/error', name: 'Error', component: AppErrorr },
  { path: '/contact', name: 'Contact', component: AppContact },
  { path: '/courses', name: 'Courses', component: AppCourses },
  { path: '/team', name: 'Team', component: AppTeam },
  { path: '/testimonial', name: 'Testimonial', component: AppTestimonial },
  { path: '/login', name: 'Login', component: AppLogin },
  { path: '/register', name: 'Register', component: AppRegister },
];

// üîπ –ó–∞—Ö–∏—â–µ–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
const protectedRoutes = [
  // üîπ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä
  {
    path: '/admin',
    component: AdminDash,
    meta: { requiresAuth: true, role: 'admin' },
    beforeEnter: [authGuard, roleGuard(['admin'])],
    children: [
      { path: '', name: 'AdminDash', component: AdminDash },
      { path: 'edit-teacher', name: 'EditTeacher', component: EditTeacher },
      { path: 'teachers', name: 'Teachers', component: Teachers },
      { path: 'details-teacher', name: 'DetailsTeacher', component: TeacherDetails },
      { path: 'add-teacher', name: 'AddTeacher', component: AddTeacher },
      { path: 'edit-student', name: 'EditStudent', component: EditStudent },
      { path: 'details-student', name: 'DetailsStudent', component: StudentDetails },
      { path: 'students', name: 'Students', component: Students },
      { path: 'add-student', name: 'AddStudent', component: AddStudent },
    ],
  },
  // üîπ –í–∏–∫–ª–∞–¥–∞—á
  {
    path: '/teach',
    component: TeacherDash,
    meta: { requiresAuth: true, role: 'teacher' },
    beforeEnter: [authGuard, roleGuard(['teacher'])],
  },
  // üîπ –°—Ç—É–¥–µ–Ω—Ç
  {
    path: '/stud',
    component: StudentDash,
    meta: { requiresAuth: true, role: 'student' },
    beforeEnter: [authGuard, roleGuard(['student'])],
  },
  // üîπ –ü—Ä–æ—Ñ—ñ–ª—å (–¥–ª—è –≤—Å—ñ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö)
  {
    path: '/prof',
    name: 'Profile',
    component: AppProfile,
    meta: { requiresAuth: true },
    beforeEnter: authGuard,
  },
];

// üîπ –û–±'—î–¥–Ω–∞–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤
const routes = [
  ...publicRoutes,
  ...protectedRoutes,
  { path: '/:pathMatch(.*)*', name: 'NotFound', component: AppErrorr }, // 404
];

// üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
const router = createRouter({
  history: createWebHistory(),
  routes,
});

// üîπ –ì–ª–æ–±–∞–ª—å–Ω–∏–π `beforeEach`, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –ø–µ—Ä–µ–¥ –∫–æ–∂–Ω–∏–º –ø–µ—Ä–µ—Ö–æ–¥–æ–º
router.beforeEach((to, from, next) => {
  const authStore = useAuthStore();

  // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –¥–æ—Å—Ç—É–ø—É
  authStore.checkAuth();

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π —ñ –∑–∞—Ö–æ–¥–∏—Ç—å –Ω–∞ `/login`, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –π–æ–≥–æ –Ω–∞ –¥–∞—à–±–æ—Ä–¥
  if (to.path === '/login' && authStore.isAuthenticated) {
    switch (authStore.userRole) {
      case 'admin':
        return next('/admin');
      case 'teacher':
        return next('/teach');
      case 'student':
        return next('/stud');
      default:
        return next('/');
    }
  }

  next();
});

export default router;
